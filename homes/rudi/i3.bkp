{ pkgs, ... }:

{
  xsession.windowManager.i3 = {
    enable = true;

    config = {
      modifier = "Mod4";
      terminal = "alacritty";
      focus.mouse = false;
      focus.followMouse = false;
      workspaceAutoBackAndForth = true;
      workspaceLayout = "stacking";
      floating.modifier = "Mod4";
      mouseWarping = "none";
      floating = {
        minimumSize = "400 x 300";
        maximumSize = "1600 x 1200";
      };

      startup = [
        { command = "xfce4-panel"; always = true; notification = false; }
      ];

      keybindings = let
        mod = "Mod4";
      in {
        "${mod}+Return" = "exec alacritty";
        "${mod}+Shift+q" = "kill";

        # Audio controls
        "XF86AudioRaiseVolume" = "exec --no-startup-id pactl set-sink-volume 0 +5%";
        "XF86AudioLowerVolume" = "exec --no-startup-id pactl set-sink-volume 0 -5%";
        "XF86AudioMute"        = "exec --no-startup-id pactl set-sink-mute 0 toggle";

        # Screen brightness
        "XF86MonBrightnessUp"   = "exec xbacklight -inc 20";
        "XF86MonBrightnessDown" = "exec xbacklight -dec 20";

        # Media control
        "XF86AudioPlay"    = "exec playerctl play";
        "XF86AudioPause"   = "exec playerctl pause";
        "XF86AudioNext"    = "exec playerctl next";
        "XF86AudioPrev"    = "exec playerctl previous";

        # Focus movement
        "${mod}+h" = "focus left";
        "${mod}+j" = "focus down";
        "${mod}+k" = "focus up";
        "${mod}+l" = "focus right";

        # Move container
        "${mod}+Shift+h" = "move left";
        "${mod}+Shift+j" = "move down";
        "${mod}+Shift+k" = "move up";
        "${mod}+Shift+l" = "move right";

        "${mod}+Shift+Left"  = "move left";
        "${mod}+Shift+Down"  = "move down";
        "${mod}+Shift+Up"    = "move up";
        "${mod}+Shift+Right" = "move right";

        # Move workspace to output
        "${mod}+Ctrl+h" = "move workspace to output left";
        "${mod}+Ctrl+l" = "move workspace to output right";

        "${mod}+Ctrl+j" = "workspace next";
        "${mod}+Ctrl+k" = "workspace prev";

        # Splits
        "${mod}+Mod1+v" = "split v";
        "${mod}+Mod1+h" = "split h";

        "${mod}+f" = "fullscreen toggle";
        "${mod}+Ctrl+f" = "fullscreen toggle global";

        "${mod}+s" = "layout stacking";
        "${mod}+w" = "layout tabbed";
        "${mod}+e" = "layout toggle split";

        "${mod}+Shift+space" = "floating toggle";
        "${mod}+space" = "focus mode_toggle";
        "${mod}+p" = "focus parent";

        "${mod}+comma"  = "exec i3-input -F 'rename workspace to \"%s\"' -P 'New name for this workspace: '";
        "${mod}+period" = "exec i3-input -F 'exec i3-msg title_format \"%s\"' -P 'New name for this window: '";

        "${mod}+c" = "reload";
        "${mod}+r" = "restart";
        "${mod}+Ctrl+F12" = "exec i3-msg exit";

        # Resize mode
        "${mod}+Shift+r" = "mode resize";
      };

      modes = {
        resize = {
          h = "resize shrink width 10 px or 10 ppt";
          j = "resize grow height 10 px or 10 ppt";
          k = "resize shrink height 10 px or 10 ppt";
          l = "resize grow width 10 px or 10 ppt";

          Left  = "resize shrink width 10 px or 10 ppt";
          Down  = "resize grow height 10 px or 10 ppt";
          Up    = "resize shrink height 10 px or 10 ppt";
          Right = "resize grow width 10 px or 10 ppt";

          Return = "mode default";
          Escape = "mode default";
        };
      };

      gaps.inner = 0;

      forWindow = [
        {
          criteria = { class = ".*"; };
          value = "title_window_icon padding 3px";
        }
      ];

      window = {
        hideEdgeBorders = "both";

        border = {
          focused          = { border = "$background"; background = "$black1"; text = "$white2"; indicator = "$background"; childBorder = null; };
          focusedInactive  = { border = "$background"; background = "$black1"; text = "$black2"; indicator = "$background"; childBorder = null; };
          unfocused        = { border = "$background"; background = "$background"; text = "$black2"; indicator = "$background"; childBorder = null; };
          urgent           = { border = "$red1"; background = "$red1"; text = "$white2"; indicator = "$red1"; childBorder = "$red1"; };
          placeholder      = { border = "$red1"; background = "$red1"; text = "$white2"; indicator = "$red1"; childBorder = "$red1"; };
        };
      };

      assigns = { }; # Optional window rules

      workspaceOutputAssign = [ ]; # Optional

      # Workspace definitions
      workspaceNames = {
        "1" = "1: terms";
        "2" = "2: web";
        "3" = "3: multi";
        "4" = "4: design";
        "5" = "5: office";
        "6" = "6: knowledge";
        "7" = "7: Games";
        "8" = "8";
        "9" = "9";
        "10" = "10";
      };

      keybindings = let
        mod = "Mod4";
        workspaces = {
          "1" = "1: terms";
          "2" = "2: web";
          "3" = "3: multi";
          "4" = "4: design";
          "5" = "5: office";
          "6" = "6: knowledge";
          "7" = "7: Games";
          "8" = "8";
          "9" = "9";
          "0" = "10";
        };
      in
        pkgs.lib.mkMerge [
          (pkgs.lib.genAttrs (builtins.attrNames workspaces) (n:
            let ws = builtins.getAttr n workspaces;
            in {
              "${mod}+${n}" = "workspace ${ws}";
              "${mod}+Shift+${n}" = "move container to workspace ${ws}";
            }))
        ];
    };
  };
}

